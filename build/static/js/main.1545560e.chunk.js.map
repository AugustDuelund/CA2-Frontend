{"version":3,"sources":["logo.svg","components/Home.jsx","components/Bored.jsx","components/Cat.jsx","components/Dog.jsx","components/Genderize.jsx","facade.js","components/Nationalize.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","facade","setLoggedIn","setErrorMessage","logout","loggedIn","initialState","username","password","useState","login","setLogin","changeName","event","target","name","value","onSubmit","preventDefault","console","log","type","onChange","hasUserAccess","onClick","getUserRoles","Bored","props","activity","Cat","fact","Dog","class","src","message","Genderize","setName","gender","setGender","probability","setProbability","fetch","then","res","json","data","URL","handleHttpErrors","ok","Promise","reject","status","fullError","setToken","token","localStorage","setItem","getToken","getItem","payloadBase64","split","JSON","parse","window","atob","roles","makeOptions","method","addToken","body","opts","headers","stringify","fetchData","endpoint","updateAction","SetErrorMessage","options","catch","err","e","code","user","removeItem","neededRole","includes","apiFacade","Nationalize","country","setCountry","BasicExample","setActivity","setType","setFact","setMessage","useEffect","className","exact","activeClassName","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1545560e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from \"react\";\n\nexport default function Home({ facade, setLoggedIn, setErrorMessage, logout, loggedIn }) {\n    const initialState = {username : \"\", password : \"\"}\n    const [login, setLogin] = useState(initialState);\n\nconst changeName = (event) => {\n    //console.log([event.target.name])\n    setLogin({\n        ...login, [event.target.name] : event.target.value\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(login);\n   \n    facade.login(login.username, login.password, setLoggedIn, setErrorMessage)\n    console.log(setErrorMessage);\n    \n    setLogin(initialState)\n  }\n\n    return (\n        <div>\n          <h2>Home</h2>\n          <form onSubmit={handleSubmit}>\n            <label>\n              User Name:\n              <br/>\n              <input type=\"text\" name=\"username\" value={login.username} onChange={changeName}/>\n              <br/>\n              Password:\n              <br/>\n              <input type=\"text\" name=\"password\" value={login.password} onChange={changeName}/>\n            </label>\n            <br/>\n            <button type=\"submit\">Login</button>\n            {facade.hasUserAccess('user', loggedIn) &&\n            <p><button onClick={logout}>Logout</button></p>}\n            <p>Role: {facade.getUserRoles()}</p>\n          </form>\n        </div>\n      );\n}","const Bored = (props) => {\n    return (\n        <div>\n          <h2>Bored?</h2>\n          <p>{props.activity}</p>\n          <p>{props.type}</p>\n        </div>\n      );\n}\n\nexport default Bored;","const Cat = (props) => {\n    return (\n        <div>\n          <h2>Cat</h2>\n          <p>{props.fact}</p>\n        </div>\n      );\n}\n\nexport default Cat;","const Dog = (props) => {\n    return (\n        <div>\n          <h2>Dog</h2>\n          <img class=\"picture\" src={props.message}></img>\n        </div>\n      );\n}\n\nexport default Dog;","import React, {useState, useEffect} from \"react\";\n\n\nfunction Genderize (props){\n\n  \n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [probability, setProbability] = useState(\"\");\n\n\n  const changeName = (event) => {\n    console.log(event.target.value)\n    setName(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(`https://api.genderize.io/?name=` + name)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setGender(data.gender)\n        setProbability(data.probability)\n      })\n  }\n\n    return (\n        <div>\n          <h2>Genderize</h2>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Name:\n              <input type=\"text\" name=\"name\" value={name} onChange={changeName}/>\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>{name}</p>\n          <p>{gender}</p>\n          <p>{probability}</p>\n        </div>\n      );\n}\n\nexport default Genderize;","const URL = \"http://localhost:8080/CA2_Backend\";\n\nfunction handleHttpErrors(res)\n{\n    if (!res.ok)\n    {\n        return Promise.reject({ status: res.status, fullError: res.json() })\n    }\n    return res.json();\n}\n\nlet apiFacade = () =>\n{\n\n    const fetchData = (endpoint, updateAction, SetErrorMessage) =>\n    {\n        const options = makeOptions(\"GET\", true); //True add's the token\n        return fetch(URL + \"/api/\" + endpoint, options)\n            .then(handleHttpErrors)\n            .then((data) => updateAction(data))\n            .catch(err =>\n            {\n                if (err.status)\n                {\n                    console.log(err)\n                    err.fullError.then(e => SetErrorMessage(e.code + \": \" + e.message))\n                }\n                else { SetErrorMessage(\"Network error\"); }\n            })\n    }\n\n    const login = (user, password, setLoggedIn, setErrorMessage) =>\n    {\n        const options = makeOptions(\"POST\", true, { username: user, password: password });\n        return fetch(URL + \"/api/login\", options)\n            .then(handleHttpErrors)\n            .then(res =>\n            {\n                setToken(res.token)\n                setLoggedIn(true);\n                setErrorMessage('Logged in');\n            })\n            .catch((err) =>\n            {\n                if (err.status)\n                {\n                    err.fullError.then((e) => setErrorMessage(e.code + ': ' + e.message));\n                } else\n                {\n                    setErrorMessage('Network error');\n                }\n            });\n    }\n\n    // Security funktionalitet\n\n    const setToken = (token) =>\n    {\n        localStorage.setItem('jwtToken', token)\n    }\n    const getToken = () =>\n    {\n        return localStorage.getItem('jwtToken')\n    }\n    const loggedIn = () =>\n    {\n        const loggedIn = getToken() != null;\n        return loggedIn;\n    }\n    const logout = () =>\n    {\n        localStorage.removeItem(\"jwtToken\");\n    }\n\n    const getUserRoles = () =>\n    {\n        const token = getToken()\n        if (token != null)\n        {\n            const payloadBase64 = getToken().split('.')[1]\n            const decodedClaims = JSON.parse(window.atob(payloadBase64))\n            const roles = decodedClaims.roles\n            return roles\n        } else return \"\"\n    }\n\n    const hasUserAccess = (neededRole, loggedIn) =>\n    {\n        const roles = getUserRoles().split(',')\n        return loggedIn && roles.includes(neededRole)\n    }\n\n    const makeOptions = (method, addToken, body) =>\n    {\n        var opts = {\n            method: method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n            }\n        }\n        if (addToken && loggedIn())\n        {\n            opts.headers[\"x-access-token\"] = getToken();\n        }\n        if (body)\n        {\n            opts.body = JSON.stringify(body);\n        }\n        return opts;\n    }\n\n    return {\n        makeOptions,\n        fetchData,\n        setToken,\n        getToken,\n        loggedIn,\n        login,\n        logout,\n        getUserRoles,\n        hasUserAccess,\n    }\n\n}\n\nconst facade = apiFacade()\n\nexport default facade","import React, {useState, useEffect} from \"react\";\n\n\nfunction Nationalize (props){\n\n  \n  const [name, setName] = useState(\"\");\n  const [country, setCountry] = useState([]);\n  \n\n\n  const changeName = (event) => {\n    console.log(event.target.value)\n    setName(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(`https://api.nationalize.io/?name=` + name)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setCountry(data.country)\n      })\n  }\n\n    return (\n        <div>\n          <h2>Nationalize</h2>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Name:\n              <input type=\"text\" name=\"name\" value={name} onChange={changeName}/>\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>{name}</p>\n          <p>{country}</p>\n        </div>\n      );\n}\n\nexport default Nationalize;","import logo from './logo.svg';\nimport './App.css';\nimport \"./style2.css\";\nimport Home from './components/Home';\nimport Bored from \"./components/Bored\";\nimport Cat from './components/Cat';\nimport Dog from './components/Dog';\nimport Genderize from './components/Genderize';\nimport facade from './facade';\nimport React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport Nationalize from './components/Nationalize';\n\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicExample() {\n  const [activity, setActivity] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [fact, setFact] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('All is good ... so far');\n\n  const logout = () => {\n    facade.logout();\n    setLoggedIn(false);\n    setErrorMessage('Logged out.')\n  };\n  \n\n  useEffect( () => {\n      fetch(\"https://www.boredapi.com/api/activity\")\n      .then(res => res.json())\n      .then(data => (setActivity(data.activity), setType(data.type)))\n  },[])\n\n  useEffect( () => {\n    fetch(\"https://catfact.ninja/fact\")\n    .then(res => res.json())\n    .then(data => setFact(data.fact))\n},[])\n\nuseEffect( () => {\n  fetch(\"https://dog.ceo/api/breeds/image/random\")\n  .then(res => res.json())\n  .then(data => setMessage(data.message))\n},[])\n\n\n\n\n\n\n  return (\n    <Router>\n      <div>\n        <ul className=\"header\">\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/bored\">Bored</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/cat\">Cat</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/dog\">Dog</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/genderize\">Genderize</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/nationalize\">Nationalize</NavLink>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home \n            logout={logout}\n            loggedIn={loggedIn}\n            setLoggedIn={setLoggedIn}\n            facade={facade}\n            setErrorMessage={setErrorMessage}\n            />\n          </Route>\n          <Route path=\"/bored\">\n              {facade.hasUserAccess('user', loggedIn) && \n              <Bored facade={facade} setErrorMessage={setErrorMessage} activity={activity} type={type}/>}\n          </Route>\n          <Route path=\"/cat\">\n            <Cat fact={fact}/>\n          </Route>\n          <Route path=\"/dog\">\n            <Dog message={message} />\n          </Route>\n          <Route path=\"/genderize\">\n          <Genderize/>\n          </Route>\n          <Route path=\"/nationalize\">\n          <Nationalize/>\n          </Route>\n        </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}